import { Fragment, useRef, useEffect, useState } from "react";

const UseRefExample = () => {
  const inputRef = useRef(null);
  const renderCount = useRef(1);
  const [name, setName] = useState("");
  const prevState = useRef("");
  // NOTE useRef very similar useState
  useEffect(() => {
    renderCount.current = renderCount.current + 1;
  });
  useEffect(() => {
    // console.log(inputRef.current);
    // inputRef.current.placeholder = "Ø³Ù„Ø§Ù…"
    // inputRef.current.className = "bg-danger"
  }, []);
  // NOTE [] -> Dependency  Array -> Ø¢Ø±Ø§ÛŒÙ‡ ÛŒ ÙˆØ§Ø¨Ø³ØªÚ¯ÛŒ
  useEffect(() => {
    prevState.current = name;
  }, [name]);
  const focusInput = () => {
    inputRef.current.focus();
  };

  return (
    <Fragment>
      <div className="w-50 d-grid gap-2 mx-auto">
        <h5 className="alert alert-success text-center">
          Ø¢Ø´Ù†Ø§ÛŒÛŒ Ø¨Ø§ Ù‡ÙˆÚ© useRef
        </h5>
        <p>{`Ù†Ø§Ù… Ø´Ù…Ø§ Ø¨Ø±Ø§Ø± Ø§Ø³Øª Ø¨Ø§ : ${name}`}</p>
        <p>{`Ù†Ø§Ù… Ù‚Ø¨Ù„ÛŒ Ø´Ù…Ø§ Ø¨Ø±Ø§Ø± Ø¨ÙˆØ¯Ù‡ Ø¨Ø§ : ${prevState.current}`}</p>
        <p>{`Ù…Ù‚Ø¯Ø§Ø± Ø±Ù†Ø¯Ø± Ù‡Ø§ÛŒ Ø§Ù†Ø¬Ø§Ù… Ø´Ø¯Ù‡ ØªØ§ Ø¨Ù‡ Ø§Ù„Ø¢Ù† Ø¨Ø±Ø§Ø± Ø§Ø³Øª Ø¨Ø§ : ${renderCount.current}`}</p>
        <input
          ref={inputRef}
          type="text"
          value={name}
          onChange={(e) => setName(e.target.value)}
          className="form-control"
          placeholder="Ø§Ø³Ù… Ø¨Ø¯Ù‡ Ø¯Ù„Ø¨Ù†Ø¯Ù…..."
        />
        <button
          onClick={focusInput}
          type="button"
          className="btn btn-primary btn-block mt-2">
          ØªÙ…Ø±Ú©Ø² Ø¨Ù†Ù…Ø§ ðŸ‘€
        </button>
      </div>
    </Fragment>
  );
};
export default UseRefExample;
